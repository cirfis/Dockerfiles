FROM golang:alpine AS builder

ENV GOPATH /app
ENV GOOS linux

RUN apk add --no-cache bash git openssh gcc libc-dev \
    && mkdir -p /app/src/github.com/darkweak/cmd && mkdir -p /app/src/github.com/darkweak/souin

WORKDIR /app/src/github.com/darkweak/souin

ADD ./souin/go.* /app/src/github.com/darkweak/souin/
RUN go mod download && GO111MODULE=on go get -d golang.org/x/lint/golint && go install golang.org/x/lint/golint

ADD ./souin/api /app/src/github.com/darkweak/souin/api
ADD ./souin/cache /app/src/github.com/darkweak/souin/cache
ADD ./souin/tests /app/src/github.com/darkweak/souin/tests
ADD ./souin/rfc /app/src/github.com/darkweak/souin/rfc
ADD ./souin/configuration /app/src/github.com/darkweak/souin/configuration
ADD ./souin/configurationtypes /app/src/github.com/darkweak/souin/configurationtypes
ADD ./souin/default /app/src/github.com/darkweak/souin/default
ADD ./souin/errors /app/src/github.com/darkweak/souin/errors
ADD ./souin/helpers /app/src/github.com/darkweak/souin/helpers
ADD ./souin/providers /app/src/github.com/darkweak/souin/providers
ADD ./souin/plugins /app/src/github.com/darkweak/souin/plugins

RUN go mod download

RUN CGO_ENABLED=0 GOOS=linux go build -a \
  -tags netgo -ldflags '-w -extldflags "-static"' -o /app/cmd/souin ./plugins/souin


#CMD ["go", "run", "plugins/souin/main.go"]

###############################
FROM alpine:latest AS souin

WORKDIR /
RUN mkdir -p /ssl /configuration /default

#COPY --from=builder /app app

COPY --from=builder /app/cmd/souin /sbin/ 
COPY --from=builder /app/src/github.com/darkweak/souin/configuration .
COPY --from=builder /app/src/github.com/darkweak/souin/default .


RUN mv *.yml /configuration/
RUN mv server.* default/
RUN chmod +x /sbin/souin

EXPOSE 80

CMD ["souin"]
